name: release

on:
  push:
    branches:
      - main

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v2
        id: release
        with:
          release-type: ruby
          package-name: statique
          bump-minor-pre-major: true
          version-file: "lib/statique/version.rb"
      - uses: actions/checkout@v2
        if: ${{ steps.release.outputs.release_created }}
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.0
        if: ${{ steps.release.outputs.release_created }}
      - name: publish gem
        run: |
          mkdir -p $HOME/.gem
          touch $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          printf -- "---\n:rubygems_api_key: ${GEM_HOST_API_KEY}\n" > $HOME/.gem/credentials
          gem build *.gemspec
          gem push *.gem
        env:
          # Make sure to update the secret name
          # if yours isn't named RUBYGEMS_AUTH_TOKEN
          GEM_HOST_API_KEY: "${{secrets.RUBYGEMS_AUTH_TOKEN}}"
        if: ${{ steps.release.outputs.release_created }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        if: ${{ steps.release.outputs.release_created }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        if: ${{ steps.release.outputs.release_created }}

      - name: Get Ruby version
        id: ruby_version
        run: echo "::set-output name=ruby-version::$(cat .ruby-version | tr -d '\n')"
        if: ${{ steps.release.outputs.release_created }}

      - name: Get Statique version
        id: statique_version
        run: echo "::set-output name=statique-version::$(ruby -Ilib/statique -r version -e 'print Statique::VERSION')"
        if: ${{ steps.release.outputs.release_created }}

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          build-args: |
            RUBY_VERSION=${{ steps.ruby_version.outputs['ruby-version'] }}
            STATIQUE_VERSION=${{ steps.statique_version.outputs['statique-version'] }}
          tags: |
            pusewicz/statique:latest
            pusewicz/statique:${{ steps.statique_version.outputs['statique-version'] }}
        if: ${{ steps.release.outputs.release_created }}
